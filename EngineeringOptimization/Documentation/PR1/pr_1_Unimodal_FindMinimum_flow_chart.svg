<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">

<svg width="1020.68" height="3509" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Generated at Thu Oct 26 20:52:21 2006 by:
  Graph::Easy v0.48
  Graph::Easy::As_svg v0.20
-->

<title>Untitled graph</title>
<defs>
 <!-- open arrow head -->
 <g id="ah" stroke-linecap="round" stroke-width="1">
  <line x1="-8" y1="-4" x2="1" y2="0" />
  <line x1="1" y1="0" x2="-8" y2="4" />
 </g>

 <!-- class definitions -->
 <style type="text/css"><![CDATA[
 .edge {
  fill: inherit;
  font-family: monospaced, courier-new, courier, sans-serif;
  font-size: 13px;
  stroke: black;
  text-anchor: middle;
 }
 .node,.node_action,.node_anon,.node_question,.node_start {
  text-anchor: middle;
  fill: white;
  font-size: 16px;
 }
 .node_action {
  fill: #8bef91;
 }
 .node_question {
  fill: #ffff8a;
 }
 .node_start {
  fill: #ffbfc9;
 }
 ]]></style>
</defs>

<!-- graph background with border (mainly for printing) -->
<rect x="0" y="0" width="1028.68" height="3517" fill="white" stroke="none" stroke-dasharray="" stroke-width="1" />

<g class="edge">
 <!-- from if newAbscissa &lt;=\nlowerLimit to if newAbscissa &gt;=\nupperLimit -->
 <!-- south/west corner -->
 <g stroke="#000000" stroke-width="1">
  <line x1="956.4" y1="2537.5" x2="956.4" y2="2636" />
  <line x1="910.58" y1="2538" x2="956.9" y2="2538" />
 </g>

 <!-- vertical -->
 <line x1="956.4" y1="2636" x2="956.4" y2="2858" stroke="#000000" stroke-width="1" />
 <text x="964" y="2747" fill="#000000" stroke="none" text-anchor="start">else</text>

 <!-- north/west corner -->
 <g stroke="#000000" stroke-width="1">
  <line x1="956.4" y1="2858" x2="956.4" y2="2956.5" />
  <line x1="911.58" y1="2956" x2="956.9" y2="2956" />
 </g>
 <use stroke="#000000" xlink:href="#ah" transform="translate(910.58 2956)rotate(180)"/>
</g>

<g class="edge">
 <!-- from frameMinimumStopTest to if And(Not(frameBound,\nNot(reverse)) -->
 <!-- north/east corner -->
 <g stroke="#000000" stroke-width="1">
  <line x1="444.84" y1="2024" x2="444.84" y2="2139.5" />
  <line x1="444.34" y1="2139" x2="490.66" y2="2139" />
 </g>

 <!-- south/west corner -->
 <g stroke="#000000" stroke-width="1">
  <line x1="444.84" y1="1999.5" x2="444.84" y2="2024" />
  <line x1="387.56" y1="2000" x2="445.34" y2="2000" />
 </g>

 <!-- horizontal -->
 <line x1="241" y1="2000" x2="355.56" y2="2000" stroke="#000000" stroke-width="1" />
 <text x="298" y="1992" fill="#000000" stroke="none">then</text>

 <!-- south/east corner -->
 <g stroke="#000000" stroke-width="1">
  <line x1="124.5" y1="1999.5" x2="124.5" y2="2018.2" />
  <line x1="124" y1="2000" x2="241" y2="2000" />
 </g>
 <use stroke="#000000" xlink:href="#ah" transform="translate(124.5 2019.2)rotate(90)"/>
</g>

<g class="edge">
 <!-- from iteration++ to newOrdinate =\nf(newAbscissa) -->
 <!-- vertical -->
 <line x1="700.62" y1="3338" x2="700.62" y2="3357.8" stroke="#000000" stroke-width="1" />
 <use stroke="#000000" xlink:href="#ah" transform="translate(700.62 3358.8)rotate(90)"/>
</g>

<g class="edge">
 <!-- from if newAbscissa &gt;=\nupperLimit to iteration++ -->
 <!-- south/east corner -->
 <g stroke="#000000" stroke-width="1">
  <line x1="444.84" y1="2955.5" x2="444.84" y2="3054" />
  <line x1="444.34" y1="2956" x2="490.66" y2="2956" />
 </g>

 <!-- vertical -->
 <line x1="444.84" y1="3054" x2="444.84" y2="3276" stroke="#000000" stroke-width="1" />
 <text x="452" y="3165" fill="#000000" stroke="none" text-anchor="start">else</text>

 <!-- north/east corner -->
 <g stroke="#000000" stroke-width="1">
  <line x1="444.84" y1="3276" x2="444.84" y2="3303.5" />
  <line x1="444.34" y1="3303" x2="489.66" y2="3303" />
 </g>
 <use stroke="#000000" xlink:href="#ah" x="490.66" y="3303"/>
</g>

<g class="edge">
 <!-- from domainBound = True to if iteration ==\nmaxWideningIterations -->
 <!-- vertical -->
 <line x1="700.62" y1="1641" x2="700.62" y2="1660.8" stroke="#000000" stroke-width="1" />
 <use stroke="#000000" xlink:href="#ah" transform="translate(700.62 1661.8)rotate(90)"/>
</g>

<g class="edge">
 <!-- from Given: f, a, c,\nlimitLeft,\nlimitRight,\nreverse,\nshrinkFactor,\ngrowthFactor,\naccuracyGoal,\nprecisionGoal,\nmaxWideningIterations,\nmaxNarrowingIterations to {fa,fc} =\n{f(a),f(c)} -->
 <!-- vertical -->
 <line x1="700.62" y1="214" x2="700.62" y2="233.8" stroke="#000000" stroke-width="1" />
 <use stroke="#000000" xlink:href="#ah" transform="translate(700.62 234.8)rotate(90)"/>
</g>

<g class="edge">
 <!-- from iteration = 1 to if fc &gt; fb -->
 <!-- vertical -->
 <line x1="700.62" y1="1036" x2="700.62" y2="1055.8" stroke="#000000" stroke-width="1" />
 <use stroke="#000000" xlink:href="#ah" transform="translate(700.62 1056.8)rotate(90)"/>
</g>

<g class="edge">
 <!-- from iterationBound = True to frameMinimumStopTest -->
 <!-- vertical -->
 <line x1="700.62" y1="1984" x2="700.62" y2="2018.2" stroke="#000000" stroke-width="1" />
 <use stroke="#000000" xlink:href="#ah" transform="translate(700.62 2019.2)rotate(90)"/>
</g>

<g class="edge">
 <!-- from fb = f(b) to iteration = 1 -->
 <!-- vertical -->
 <line x1="700.62" y1="968" x2="700.62" y2="987.8" stroke="#000000" stroke-width="1" />
 <use stroke="#000000" xlink:href="#ah" transform="translate(700.62 988.8)rotate(90)"/>
</g>

<g class="edge">
 <!-- from {fv,v,fw,w,fx,x} =\npair sorted\n{fa,a,fb,b,fc,c}\nin order of\ndecreasing\nordinate to maxDisplacement =\nc-a -->
 <!-- vertical -->
 <line x1="124.5" y1="3252" x2="124.5" y2="3271.8" stroke="#000000" stroke-width="1" />
 <use stroke="#000000" xlink:href="#ah" transform="translate(124.5 3272.8)rotate(90)"/>
</g>

<g class="edge">
 <!-- from if newAbscissa &lt;=\nlowerLimit to newAbscissa = lowerLimit -->
 <!-- vertical -->
 <line x1="700.62" y1="2644" x2="700.62" y2="2692.6" stroke="#000000" stroke-width="1" />
 <use stroke="#000000" xlink:href="#ah" transform="translate(700.62 2693.6)rotate(90)"/>
 <text x="708" y="2668" fill="#000000" stroke="none" text-anchor="start">then</text>
</g>

<g class="edge">
 <!-- from if iteration ==\nmaxWideningIterations to iterationBound = True -->
 <!-- vertical -->
 <line x1="700.62" y1="1884" x2="700.62" y2="1932.6" stroke="#000000" stroke-width="1" />
 <use stroke="#000000" xlink:href="#ah" transform="translate(700.62 1933.6)rotate(90)"/>
 <text x="708" y="1908" fill="#000000" stroke="none" text-anchor="start">then</text>
</g>

<g class="edge">
 <!-- from newAbscissa = lowerLimit to if newAbscissa &gt;=\nupperLimit -->
 <!-- vertical -->
 <line x1="700.62" y1="2834" x2="700.62" y2="2853.8" stroke="#000000" stroke-width="1" />
 <use stroke="#000000" xlink:href="#ah" transform="translate(700.62 2854.8)rotate(90)"/>
</g>

<g class="edge">
 <!-- from {fa,a,fb,b,fc,c} =\npair sorted\n{fa,a,fb,b,fc,c}\nin order of\nincreasing\nabscissa to {fu,u} =\n{fc,c} -->
 <!-- vertical -->
 <line x1="124.5" y1="2834" x2="124.5" y2="2853.8" stroke="#000000" stroke-width="1" />
 <use stroke="#000000" xlink:href="#ah" transform="translate(124.5 2854.8)rotate(90)"/>
</g>

<g class="edge">
 <!-- from newAbscissa = upperLimit to iteration++ -->
 <!-- vertical -->
 <line x1="700.62" y1="3252" x2="700.62" y2="3271.8" stroke="#000000" stroke-width="1" />
 <use stroke="#000000" xlink:href="#ah" transform="translate(700.62 3272.8)rotate(90)"/>
</g>

<g class="edge">
 <!-- from b = c + shrinkFactor*(a-c) to fb = f(b) -->
 <!-- vertical -->
 <line x1="700.62" y1="900" x2="700.62" y2="919.8" stroke="#000000" stroke-width="1" />
 <use stroke="#000000" xlink:href="#ah" transform="translate(700.62 920.8)rotate(90)"/>
</g>

<g class="edge">
 <!-- from if fc &gt; fb to frameBound = True -->
 <!-- vertical -->
 <line x1="700.62" y1="1191" x2="700.62" y2="1239.6" stroke="#000000" stroke-width="1" />
 <use stroke="#000000" xlink:href="#ah" transform="translate(700.62 1240.6)rotate(90)"/>
 <text x="708" y="1215" fill="#000000" stroke="none" text-anchor="start">then</text>
</g>

<g class="edge">
 <!-- from if And(Not(frameBound,\nNot(reverse)) to if frameBound -->
 <!-- south/west corner -->
 <g stroke="#000000" stroke-width="1">
  <line x1="298.28" y1="2138.5" x2="298.28" y2="2254" />
  <line x1="252.46" y1="2139" x2="298.78" y2="2139" />
 </g>

 <!-- vertical -->
 <line x1="298.28" y1="2254" x2="298.28" y2="2440" stroke="#000000" stroke-width="1" />
 <text x="306" y="2347" fill="#000000" stroke="none" text-anchor="start">else</text>

 <!-- north/west corner -->
 <g stroke="#000000" stroke-width="1">
  <line x1="298.28" y1="2440" x2="298.28" y2="2538.5" />
  <line x1="253.46" y1="2538" x2="298.78" y2="2538" />
 </g>
 <use stroke="#000000" xlink:href="#ah" transform="translate(252.46 2538)rotate(180)"/>
</g>

<g class="edge">
 <!-- from if newAbscissa &gt;=\nupperLimit to newAbscissa = upperLimit -->
 <!-- vertical -->
 <line x1="700.62" y1="3062" x2="700.62" y2="3110.6" stroke="#000000" stroke-width="1" />
 <use stroke="#000000" xlink:href="#ah" transform="translate(700.62 3111.6)rotate(90)"/>
 <text x="708" y="3086" fill="#000000" stroke="none" text-anchor="start">then</text>
</g>

<g class="edge">
 <!-- from if iteration ==\nmaxWideningIterations to frameMinimumStopTest -->
 <!-- south/west corner -->
 <g stroke="#000000" stroke-width="1">
  <line x1="956.4" y1="1770" x2="956.4" y2="1876" />
  <line x1="910.58" y1="1770.5" x2="956.9" y2="1770.5" />
 </g>

 <!-- vertical -->
 <line x1="956.4" y1="1876" x2="956.4" y2="2024" stroke="#000000" stroke-width="1" />
 <text x="964" y="1950" fill="#000000" stroke="none" text-anchor="start">else</text>

 <!-- north/west corner -->
 <g stroke="#000000" stroke-width="1">
  <line x1="956.4" y1="2024" x2="956.4" y2="2139.5" />
  <line x1="911.58" y1="2139" x2="956.9" y2="2139" />
 </g>
 <use stroke="#000000" xlink:href="#ah" transform="translate(910.58 2139)rotate(180)"/>
</g>

<g class="edge">
 <!-- from cdomain to domainBound = True -->
 <!-- vertical -->
 <line x1="700.62" y1="1541" x2="700.62" y2="1589.6" stroke="#000000" stroke-width="1" />
 <use stroke="#000000" xlink:href="#ah" transform="translate(700.62 1590.6)rotate(90)"/>
 <text x="708" y="1565" fill="#000000" stroke="none" text-anchor="start">then</text>
</g>

<g class="edge">
 <!-- from if reverse to {fc,c,fa,a} =\n{fa,a,fc,c} -->
 <!-- vertical -->
 <line x1="700.62" y1="714" x2="700.62" y2="762.6" stroke="#000000" stroke-width="1" />
 <use stroke="#000000" xlink:href="#ah" transform="translate(700.62 763.6)rotate(90)"/>
 <text x="708" y="738" fill="#000000" stroke="none" text-anchor="start">then</text>
</g>

<g class="edge">
 <!-- from newAbscissa = c + growthFactor*(c-b) to if newAbscissa &lt;=\nlowerLimit -->
 <!-- vertical -->
 <line x1="700.62" y1="2416" x2="700.62" y2="2435.8" stroke="#000000" stroke-width="1" />
 <use stroke="#000000" xlink:href="#ah" transform="translate(700.62 2436.8)rotate(90)"/>
</g>

<g class="edge">
 <!-- from cdomain to if iteration ==\nmaxWideningIterations -->
 <!-- south/east corner -->
 <g stroke="#000000" stroke-width="1">
  <line x1="444.84" y1="1423.5" x2="444.84" y2="1533" />
  <line x1="444.34" y1="1424" x2="490.66" y2="1424" />
 </g>

 <!-- vertical -->
 <line x1="444.84" y1="1533" x2="444.84" y2="1665" stroke="#000000" stroke-width="1" />
 <text x="452" y="1599" fill="#000000" stroke="none" text-anchor="start">else</text>

 <!-- north/east corner -->
 <g stroke="#000000" stroke-width="1">
  <line x1="444.84" y1="1665" x2="444.84" y2="1771" />
  <line x1="444.34" y1="1770.5" x2="489.66" y2="1770.5" />
 </g>
 <use stroke="#000000" xlink:href="#ah" x="490.66" y="1770.5"/>
</g>

<g class="edge">
 <!-- from frameBound = True to cdomain -->
 <!-- vertical -->
 <line x1="700.62" y1="1291" x2="700.62" y2="1310.8" stroke="#000000" stroke-width="1" />
 <use stroke="#000000" xlink:href="#ah" transform="translate(700.62 1311.8)rotate(90)"/>
</g>

<g class="edge">
 <!-- from {fu,u} =\n{fc,c} to {fv,v,fw,w,fx,x} =\npair sorted\n{fa,a,fb,b,fc,c}\nin order of\ndecreasing\nordinate -->
 <!-- vertical -->
 <line x1="124.5" y1="3062" x2="124.5" y2="3110.6" stroke="#000000" stroke-width="1" />
 <use stroke="#000000" xlink:href="#ah" transform="translate(124.5 3111.6)rotate(90)"/>
</g>

<g class="edge">
 <!-- from if reverse to b = c + shrinkFactor*(a-c) -->
 <!-- south/east corner -->
 <g stroke="#000000" stroke-width="1">
  <line x1="444.84" y1="650.5" x2="444.84" y2="706" />
  <line x1="444.34" y1="651" x2="490.66" y2="651" />
 </g>

 <!-- vertical -->
 <line x1="444.84" y1="706" x2="444.84" y2="856" stroke="#000000" stroke-width="1" />
 <text x="452" y="781" fill="#000000" stroke="none" text-anchor="start">else</text>

 <!-- north/east corner -->
 <g stroke="#000000" stroke-width="1">
  <line x1="444.84" y1="856" x2="444.84" y2="874.5" />
  <line x1="444.34" y1="874" x2="489.66" y2="874" />
 </g>
 <use stroke="#000000" xlink:href="#ah" x="490.66" y="874"/>
</g>

<g class="edge">
 <!-- from newOrdinate =\nf(newAbscissa) to {fa,a,fb,b,fc,c} =\n{fb,b,fc,c,newOrdinate,newAbscissa} -->
 <!-- vertical -->
 <line x1="700.62" y1="3424" x2="700.62" y2="3443.8" stroke="#000000" stroke-width="1" />
 <use stroke="#000000" xlink:href="#ah" transform="translate(700.62 3444.8)rotate(90)"/>
</g>

<g class="edge">
 <!-- from if fc &gt; fa to {fa,a,fc,c} =\n{fc,c,fa,a} -->
 <!-- vertical -->
 <line x1="700.62" y1="454" x2="700.62" y2="502.6" stroke="#000000" stroke-width="1" />
 <use stroke="#000000" xlink:href="#ah" transform="translate(700.62 503.6)rotate(90)"/>
 <text x="708" y="478" fill="#000000" stroke="none" text-anchor="start">then</text>
</g>

<g class="edge">
 <!-- from Sow (a.k.a. store)\nthe results of running\nthis algorithm with\nreverse = False to if frameBound -->
 <!-- vertical -->
 <line x1="124.5" y1="2416" x2="124.5" y2="2435.8" stroke="#000000" stroke-width="1" />
 <use stroke="#000000" xlink:href="#ah" transform="translate(124.5 2436.8)rotate(90)"/>
</g>

<g class="edge">
 <!-- from frameMinimumStopTest to newAbscissa = c + growthFactor*(c-b) -->
 <!-- vertical -->
 <line x1="700.62" y1="2262" x2="700.62" y2="2310.6" stroke="#000000" stroke-width="1" />
 <use stroke="#000000" xlink:href="#ah" transform="translate(700.62 2311.6)rotate(90)"/>
 <text x="708" y="2286" fill="#000000" stroke="none" text-anchor="start">else</text>
</g>

<g class="edge">
 <!-- from {fc,c,fa,a} =\n{fa,a,fc,c} to b = c + shrinkFactor*(a-c) -->
 <!-- vertical -->
 <line x1="700.62" y1="832" x2="700.62" y2="851.8" stroke="#000000" stroke-width="1" />
 <use stroke="#000000" xlink:href="#ah" transform="translate(700.62 852.8)rotate(90)"/>
</g>

<g class="edge">
 <!-- from if fc &gt; fb to cdomain -->
 <!-- south/west corner -->
 <g stroke="#000000" stroke-width="1">
  <line x1="956.4" y1="1121" x2="956.4" y2="1183" />
  <line x1="910.58" y1="1121.5" x2="956.9" y2="1121.5" />
 </g>

 <!-- vertical -->
 <line x1="956.4" y1="1183" x2="956.4" y2="1315" stroke="#000000" stroke-width="1" />
 <text x="964" y="1249" fill="#000000" stroke="none" text-anchor="start">else</text>

 <!-- north/west corner -->
 <g stroke="#000000" stroke-width="1">
  <line x1="956.4" y1="1315" x2="956.4" y2="1424.5" />
  <line x1="911.58" y1="1424" x2="956.9" y2="1424" />
 </g>
 <use stroke="#000000" xlink:href="#ah" transform="translate(910.58 1424)rotate(180)"/>
</g>

<g class="edge">
 <!-- from {fa,a,fc,c} =\n{fc,c,fa,a} to if reverse -->
 <!-- vertical -->
 <line x1="700.62" y1="572" x2="700.62" y2="591.8" stroke="#000000" stroke-width="1" />
 <use stroke="#000000" xlink:href="#ah" transform="translate(700.62 592.8)rotate(90)"/>
</g>

<g class="edge">
 <!-- from if frameBound to {fa,a,fb,b,fc,c} =\npair sorted\n{fa,a,fb,b,fc,c}\nin order of\nincreasing\nabscissa -->
 <!-- vertical -->
 <line x1="124.5" y1="2644" x2="124.5" y2="2692.6" stroke="#000000" stroke-width="1" />
 <use stroke="#000000" xlink:href="#ah" transform="translate(124.5 2693.6)rotate(90)"/>
 <text x="132" y="2668" fill="#000000" stroke="none" text-anchor="start">then</text>
</g>

<g class="edge">
 <!-- from {fa,fc} =\n{f(a),f(c)} to if fc &gt; fa -->
 <!-- vertical -->
 <line x1="700.62" y1="300" x2="700.62" y2="319.8" stroke="#000000" stroke-width="1" />
 <use stroke="#000000" xlink:href="#ah" transform="translate(700.62 320.8)rotate(90)"/>
</g>

<g class="edge">
 <!-- from if And(Not(frameBound,\nNot(reverse)) to Sow (a.k.a. store)\nthe results of running\nthis algorithm with\nreverse = False -->
 <!-- vertical -->
 <line x1="124.5" y1="2262" x2="124.5" y2="2310.6" stroke="#000000" stroke-width="1" />
 <use stroke="#000000" xlink:href="#ah" transform="translate(124.5 2311.6)rotate(90)"/>
 <text x="132" y="2286" fill="#000000" stroke="none" text-anchor="start">then</text>
</g>

<g class="edge">
 <!-- from {fa,a,fb,b,fc,c} =\n{fb,b,fc,c,newOrdinate,newAbscissa} to if fc &gt; fb -->
 <!-- north/east corner -->
 <g stroke="#000000" stroke-width="1">
  <line x1="444.84" y1="3448" x2="444.84" y2="3475.5" />
  <line x1="444.34" y1="3475" x2="490.66" y2="3475" />
 </g>

 <!-- vertical -->
 <line x1="444.84" y1="3362" x2="444.84" y2="3448" stroke="#000000" stroke-width="1" />

 <!-- south/west corner -->
 <g stroke="#000000" stroke-width="1">
  <line x1="444.84" y1="3345.5" x2="444.84" y2="3362" />
  <line x1="387.56" y1="3346" x2="445.34" y2="3346" />
 </g>

 <!-- north/east corner -->
 <g stroke="#000000" stroke-width="1">
  <line x1="371.56" y1="3330" x2="371.56" y2="3346.5" />
  <line x1="371.06" y1="3346" x2="387.56" y2="3346" />
 </g>

 <!-- vertical -->
 <line x1="371.56" y1="2024" x2="371.56" y2="3330" stroke="#000000" stroke-width="1" />

 <!-- crossing -->
 <g stroke="#000000" stroke-width="1">
  <line x1="355.56" y1="2000" x2="387.56" y2="2000" />
  <line x1="371.56" y1="1976" x2="371.56" y2="2024" stroke="#000000" stroke-dasharray="1 0"/>
 </g>

 <!-- vertical -->
 <line x1="371.56" y1="1183" x2="371.56" y2="1976" stroke="#000000" stroke-width="1" />

 <!-- south/east corner -->
 <g stroke="#000000" stroke-width="1">
  <line x1="371.56" y1="1121" x2="371.56" y2="1183" />
  <line x1="371.06" y1="1121.5" x2="387.56" y2="1121.5" />
 </g>

 <!-- horizontal -->
 <line x1="387.56" y1="1121.5" x2="489.66" y2="1121.5" stroke="#000000" stroke-width="1" />
 <use stroke="#000000" xlink:href="#ah" x="490.66" y="1121.5"/>
</g>

<g class="edge">
 <!-- from if fc &gt; fa to if reverse -->
 <!-- south/west corner -->
 <g stroke="#000000" stroke-width="1">
  <line x1="956.4" y1="384.5" x2="956.4" y2="446" />
  <line x1="910.58" y1="385" x2="956.9" y2="385" />
 </g>

 <!-- vertical -->
 <line x1="956.4" y1="446" x2="956.4" y2="596" stroke="#000000" stroke-width="1" />
 <text x="964" y="521" fill="#000000" stroke="none" text-anchor="start">else</text>

 <!-- north/west corner -->
 <g stroke="#000000" stroke-width="1">
  <line x1="956.4" y1="596" x2="956.4" y2="651.5" />
  <line x1="911.58" y1="651" x2="956.9" y2="651" />
 </g>
 <use stroke="#000000" xlink:href="#ah" transform="translate(910.58 651)rotate(180)"/>
</g>

<g class="node-start">
 <!-- Given: f, a, c,\nlimitLeft,\nlimitRight,\nreverse,\nshrinkFactor,\ngrowthFactor,\naccuracyGoal,\nprecisionGoal,\nmaxWideningIterations,\nmaxNarrowingIterations, rounded -->
 <rect fill="#ffbfc9" height="197" rx="15" ry="15" stroke="#000000" width="396" x="502.62"
   y="8.5" />
 <text x="700" y="32" fill="#000000" text-anchor="middle">
  <tspan x="700" y="30">Given: f, a, c,</tspan>
  <tspan x="700" y="48">limitLeft,</tspan>
  <tspan x="700" y="66">limitRight,</tspan>
  <tspan x="700" y="84">reverse,</tspan>
  <tspan x="700" y="102">shrinkFactor,</tspan>
  <tspan x="700" y="120">growthFactor,</tspan>
  <tspan x="700" y="138">accuracyGoal,</tspan>
  <tspan x="700" y="156">precisionGoal,</tspan>
  <tspan x="700" y="174">maxWideningIterations,</tspan>
  <tspan x="700" y="192">maxNarrowingIterations</tspan>
 </text>
</g>

<g class="node-action">
 <!-- {fa,fc} =\n{f(a),f(c)}, rounded -->
 <rect fill="#8bef91" height="53" rx="15" ry="15" stroke="#000000" width="396" x="502.62"
   y="238.5" />
 <text x="700" y="262" fill="#000000" text-anchor="middle">
  <tspan x="700" y="260">{fa,fc} =</tspan>
  <tspan x="700" y="278">{f(a),f(c)}</tspan>
 </text>
</g>

<g class="node-question">
 <!-- if fc &gt; fa, diamond -->
 <polygon points="502.79,385, 700.62,324.5, 898.45,385, 700.62,445.5" fill="#ffff8a" stroke="#000000" />
 <text x="700" y="391" fill="#000000" text-anchor="middle">if fc &gt; fa</text>
</g>

<g class="node-action">
 <!-- {fa,a,fc,c} =\n{fc,c,fa,a}, rounded -->
 <rect fill="#8bef91" height="53" rx="15" ry="15" stroke="#000000" width="396" x="502.62"
   y="510.5" />
 <text x="700" y="534" fill="#000000" text-anchor="middle">
  <tspan x="700" y="532">{fa,a,fc,c} =</tspan>
  <tspan x="700" y="550">{fc,c,fa,a}</tspan>
 </text>
</g>

<g class="node-question">
 <!-- if reverse, diamond -->
 <polygon points="502.79,651, 700.62,596.5, 898.45,651, 700.62,705.5" fill="#ffff8a" stroke="#000000" />
 <text x="700" y="657" fill="#000000" text-anchor="middle">if reverse</text>
</g>

<g class="node-action">
 <!-- {fc,c,fa,a} =\n{fa,a,fc,c}, rounded -->
 <rect fill="#8bef91" height="53" rx="15" ry="15" stroke="#000000" width="396" x="502.62"
   y="770.5" />
 <text x="700" y="794" fill="#000000" text-anchor="middle">
  <tspan x="700" y="792">{fc,c,fa,a} =</tspan>
  <tspan x="700" y="810">{fa,a,fc,c}</tspan>
 </text>
</g>

<g class="node-action">
 <!-- b = c + shrinkFactor*(a-c), rounded -->
 <rect fill="#8bef91" height="35" rx="15" ry="15" stroke="#000000" width="396" x="502.62"
   y="856.5" />
 <text x="700" y="880" fill="#000000" text-anchor="middle">b = c + shrinkFactor*(a-c)</text>
</g>

<g class="node-action">
 <!-- fb = f(b), rounded -->
 <rect fill="#8bef91" height="35" rx="15" ry="15" stroke="#000000" width="396" x="502.62"
   y="924.5" />
 <text x="700" y="948" fill="#000000" text-anchor="middle">fb = f(b)</text>
</g>

<g class="node-action">
 <!-- iteration = 1, rounded -->
 <rect fill="#8bef91" height="35" rx="15" ry="15" stroke="#000000" width="396" x="502.62"
   y="992.5" />
 <text x="700" y="1016" fill="#000000" text-anchor="middle">iteration = 1</text>
</g>

<g class="node-question">
 <!-- if fc &gt; fb, diamond -->
 <polygon points="502.79,1121.5, 700.62,1060.5, 898.45,1121.5, 700.62,1182.5" fill="#ffff8a" stroke="#000000" />
 <text x="700" y="1127" fill="#000000" text-anchor="middle">if fc &gt; fb</text>
</g>

<g class="node-action">
 <!-- frameBound = True, rounded -->
 <rect fill="#8bef91" height="35" rx="15" ry="15" stroke="#000000" width="396" x="502.62"
   y="1247.5" />
 <text x="700" y="1271" fill="#000000" text-anchor="middle">frameBound = True</text>
</g>

<g class="node-question">
 <!-- if Or(c == limitLeft,\nc == limitRight), diamond -->
 <polygon points="502.79,1424, 700.62,1315.5, 898.45,1424, 700.62,1532.5" fill="#ffff8a" stroke="#000000" />
 <text x="700" y="1421" fill="#000000" text-anchor="middle">
  <tspan x="700" y="1419">if Or(c == limitLeft,</tspan>
  <tspan x="700" y="1437">c == limitRight)</tspan>
 </text>
</g>

<g class="node-action">
 <!-- domainBound = True, rounded -->
 <rect fill="#8bef91" height="35" rx="15" ry="15" stroke="#000000" width="396" x="502.62"
   y="1597.5" />
 <text x="700" y="1621" fill="#000000" text-anchor="middle">domainBound = True</text>
</g>

<g class="node-question">
 <!-- if iteration ==\nmaxWideningIterations, diamond -->
 <polygon points="502.79,1770.5, 700.62,1665.5, 898.45,1770.5, 700.62,1875.5" fill="#ffff8a" stroke="#000000" />
 <text x="700" y="1767" fill="#000000" text-anchor="middle">
  <tspan x="700" y="1765">if iteration ==</tspan>
  <tspan x="700" y="1783">maxWideningIterations</tspan>
 </text>
</g>

<g class="node-action">
 <!-- iterationBound = True, rounded -->
 <rect fill="#8bef91" height="35" rx="15" ry="15" stroke="#000000" width="396" x="502.62"
   y="1940.5" />
 <text x="700" y="1964" fill="#000000" text-anchor="middle">iterationBound = True</text>
</g>

<g class="node-question">
 <!-- if Or(frameBound,\ndomainBound,\niterationBound), diamond -->
 <polygon points="502.79,2139, 700.62,2024.5, 898.45,2139, 700.62,2253.5" fill="#ffff8a" stroke="#000000" />
 <text x="700" y="2127" fill="#000000" text-anchor="middle">
  <tspan x="700" y="2125">if Or(frameBound,</tspan>
  <tspan x="700" y="2143">domainBound,</tspan>
  <tspan x="700" y="2161">iterationBound)</tspan>
 </text>
</g>

<g class="node-question">
 <!-- if And(Not(frameBound,\nNot(reverse)), diamond -->
 <polygon points="8.67,2139, 124.5,2024.5, 240.33,2139, 124.5,2253.5" fill="#ffff8a" stroke="#000000" />
 <text x="124" y="2136" fill="#000000" text-anchor="middle">
  <tspan x="124" y="2134">if And(Not(frameBound,</tspan>
  <tspan x="124" y="2152">Not(reverse))</tspan>
 </text>
</g>

<g class="node-action">
 <!-- Sow (a.k.a. store)\nthe results of running\nthis algorithm with\nreverse = False, rounded -->
 <rect fill="#8bef91" height="89" rx="15" ry="15" stroke="#000000" width="232" x="8.5"
   y="2318.5" />
 <text x="124" y="2342" fill="#000000" text-anchor="middle">
  <tspan x="124" y="2340">Sow (a.k.a. store)</tspan>
  <tspan x="124" y="2358">the results of running</tspan>
  <tspan x="124" y="2376">this algorithm with</tspan>
  <tspan x="124" y="2394">reverse = False</tspan>
 </text>
</g>

<g class="node-question">
 <!-- if frameBound, diamond -->
 <polygon points="8.67,2538, 124.5,2440.5, 240.33,2538, 124.5,2635.5" fill="#ffff8a" stroke="#000000" />
 <text x="124" y="2544" fill="#000000" text-anchor="middle">if frameBound</text>
</g>

<g class="node-action">
 <!-- {fa,a,fb,b,fc,c} =\npair sorted\n{fa,a,fb,b,fc,c}\nin order of\nincreasing\nabscissa, rounded -->
 <rect fill="#8bef91" height="125" rx="15" ry="15" stroke="#000000" width="232" x="8.5"
   y="2700.5" />
 <text x="124" y="2724" fill="#000000" text-anchor="middle">
  <tspan x="124" y="2722">{fa,a,fb,b,fc,c} =</tspan>
  <tspan x="124" y="2740">pair sorted</tspan>
  <tspan x="124" y="2758">{fa,a,fb,b,fc,c}</tspan>
  <tspan x="124" y="2776">in order of</tspan>
  <tspan x="124" y="2794">increasing</tspan>
  <tspan x="124" y="2812">abscissa</tspan>
 </text>
</g>

<g class="node-action">
 <!-- {fu,u} =\n{fc,c}, rounded -->
 <rect fill="#8bef91" height="195" rx="15" ry="15" stroke="#000000" width="232" x="8.5"
   y="2858.5" />
 <text x="124" y="2953" fill="#000000" text-anchor="middle">
  <tspan x="124" y="2951">{fu,u} =</tspan>
  <tspan x="124" y="2969">{fc,c}</tspan>
 </text>
</g>

<g class="node-action">
 <!-- {fv,v,fw,w,fx,x} =\npair sorted\n{fa,a,fb,b,fc,c}\nin order of\ndecreasing\nordinate, rounded -->
 <rect fill="#8bef91" height="125" rx="15" ry="15" stroke="#000000" width="232" x="8.5"
   y="3118.5" />
 <text x="124" y="3142" fill="#000000" text-anchor="middle">
  <tspan x="124" y="3140">{fv,v,fw,w,fx,x} =</tspan>
  <tspan x="124" y="3158">pair sorted</tspan>
  <tspan x="124" y="3176">{fa,a,fb,b,fc,c}</tspan>
  <tspan x="124" y="3194">in order of</tspan>
  <tspan x="124" y="3212">decreasing</tspan>
  <tspan x="124" y="3230">ordinate</tspan>
 </text>
</g>

<g class="node-action">
 <!-- maxDisplacement =\nc-a, rounded -->
 <rect fill="#8bef91" height="53" rx="15" ry="15" stroke="#000000" width="232" x="8.5"
   y="3276.5" />
 <text x="124" y="3300" fill="#000000" text-anchor="middle">
  <tspan x="124" y="3298">maxDisplacement =</tspan>
  <tspan x="124" y="3316">c-a</tspan>
 </text>
</g>

<g class="node-action">
 <!-- newAbscissa = c + growthFactor*(c-b), rounded -->
 <rect fill="#8bef91" height="89" rx="15" ry="15" stroke="#000000" width="396" x="502.62"
   y="2318.5" />
 <text x="700" y="2369" fill="#000000" text-anchor="middle">newAbscissa = c + growthFactor*(c-b)</text>
</g>

<g class="node-question">
 <!-- if newAbscissa &lt;=\nlowerLimit, diamond -->
 <polygon points="502.79,2538, 700.62,2440.5, 898.45,2538, 700.62,2635.5" fill="#ffff8a" stroke="#000000" />
 <text x="700" y="2535" fill="#000000" text-anchor="middle">
  <tspan x="700" y="2533">if newAbscissa &lt;=</tspan>
  <tspan x="700" y="2551">lowerLimit</tspan>
 </text>
</g>

<g class="node-action">
 <!-- newAbscissa = lowerLimit, rounded -->
 <rect fill="#8bef91" height="125" rx="15" ry="15" stroke="#000000" width="396" x="502.62"
   y="2700.5" />
 <text x="700" y="2769" fill="#000000" text-anchor="middle">newAbscissa = lowerLimit</text>
</g>

<g class="node-question">
 <!-- if newAbscissa &gt;=\nupperLimit, diamond -->
 <polygon points="502.79,2956, 700.62,2858.5, 898.45,2956, 700.62,3053.5" fill="#ffff8a" stroke="#000000" />
 <text x="700" y="2953" fill="#000000" text-anchor="middle">
  <tspan x="700" y="2951">if newAbscissa &gt;=</tspan>
  <tspan x="700" y="2969">upperLimit</tspan>
 </text>
</g>

<g class="node-action">
 <!-- newAbscissa = upperLimit, rounded -->
 <rect fill="#8bef91" height="125" rx="15" ry="15" stroke="#000000" width="396" x="502.62"
   y="3118.5" />
 <text x="700" y="3187" fill="#000000" text-anchor="middle">newAbscissa = upperLimit</text>
</g>

<g class="node-action">
 <!-- iteration++, rounded -->
 <rect fill="#8bef91" height="53" rx="15" ry="15" stroke="#000000" width="396" x="502.62"
   y="3276.5" />
 <text x="700" y="3309" fill="#000000" text-anchor="middle">iteration++</text>
</g>

<g class="node-action">
 <!-- newOrdinate =\nf(newAbscissa), rounded -->
 <rect fill="#8bef91" height="53" rx="15" ry="15" stroke="#000000" width="396" x="502.62"
   y="3362.5" />
 <text x="700" y="3386" fill="#000000" text-anchor="middle">
  <tspan x="700" y="3384">newOrdinate =</tspan>
  <tspan x="700" y="3402">f(newAbscissa)</tspan>
 </text>
</g>

<g class="node-action">
 <!-- {fa,a,fb,b,fc,c} =\n{fb,b,fc,c,newOrdinate,newAbscissa}, rounded -->
 <rect fill="#8bef91" height="53" rx="15" ry="15" stroke="#000000" width="396" x="502.62"
   y="3448.5" />
 <text x="700" y="3472" fill="#000000" text-anchor="middle">
  <tspan x="700" y="3470">{fa,a,fb,b,fc,c} =</tspan>
  <tspan x="700" y="3488">{fb,b,fc,c,newOrdinate,newAbscissa}</tspan>
 </text>
</g>

</svg>
