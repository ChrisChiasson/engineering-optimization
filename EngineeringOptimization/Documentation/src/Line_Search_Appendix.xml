<?xml version="1.0" encoding="UTF-8"?>
<appendix xml:id="Line_Search_Appendix"
	xmlns="http://docbook.org/ns/docbook"
	xmlns:xi="http://www.w3.org/2001/XInclude"
	xmlns:xl="http://www.w3.org/1999/xlink"
	xmlns:xml="http://www.w3.org/XML/1998/namespace"
	version="5">
	<para>Here is a list of all the major variables found within the
		line search flow charts.</para>
	<variablelist>
		<varlistentry>
			<term>f</term>
			<listitem>
				<para>f is a function of the independant variable. In
					the actual source code, f is named function.</para>
			</listitem>
		</varlistentry>
		<varlistentry>
			<term>a</term><term>b</term><term>c</term>
			<listitem>
				<para>These are abscissas at which the function is
					evaluated. They are always in consecutively
					increasing or decreasing order. As the algorithm
					continues, the interval [a,c] moves in the downhill
					direction and also expands.</para>
			</listitem>
		</varlistentry>
		<varlistentry>
			<term>fa</term><term>fb</term><term>fc</term>
			<listitem>
				<para>These are ordinates at a particular abscissa. The
					algorithm will stop when fb is lower than fc.</para>
			</listitem>
		</varlistentry>
		<varlistentry>
			<term>limitLeft</term><term>limitRight</term>
			<listitem>
				<para>These are numbers that limit the minimum and
					maximum values of c. The default to the minimum
					and maximum machine number that can be represented
					in Mathematica, though the user can change them, as
					seen in EXAMPLE BLAH BLAH.</para>
			</listitem>
		</varlistentry>
		<varlistentry>
			<term>growthFactor</term>
			<listitem>
				<para>The growth factor is a somewhat arbitrary factor
					by which to grow the interval [b,c] on each
					iteration FACT CHECK PLEASE. It is typically chosen to be equal to
					the golden ratio from mathematics.
					<inlineequation><mathphrase>&#934; = growthFactor &#8773; 1.618</mathphrase></inlineequation>.</para>
			</listitem>
		</varlistentry>
		<varlistentry>
			<term>frameBound</term>
			<listitem>
				<para>A boolean variable that when true, causes the
					termination of the bracketing routine. frameBound
					is set to true when fb is lower than fc.</para>
			</listitem>
		</varlistentry>
		<varlistentry>
			<term>domainBound</term>
			<listitem>
				<para>A boolean variable that when true, causes the
					termination of the bracketing routine and the
					issuance of an error message stating that the
					routine stopped on the edge of its domain.
					domainBound	is set to true when c is equal to either
					limitLeft or limitRight.</para>
			</listitem>
		</varlistentry>
		<varlistentry>
			<term>iterationBound</term>
			<listitem>
				<para>A boolean variable that when true, causes the
					termination of the bracketing routine and the
					issuance of an error message stating that the
					routine stopped because it used too many iterations.
					iterationBound is set to true when iteration is
					equal to maxWideningIterations.</para>
			</listitem>
		</varlistentry>
		<varlistentry>
			<term>iteration</term>
			<listitem>
				<para>In integer indicating the present iteration.
					Iteration is incremented for each function
					evaluation.</para>
			</listitem>
		</varlistentry>				
		<varlistentry>
			<term>maxWideningIterations</term>
			<listitem>
				<para>This indicates the maximum number of iterations
					allowed by the bracketing routine. It can be set by
					the	option "MaxWideningIterations" as in
					<command>FindMinimum[...,Method&#8594;{"Unimodal","MaxWideningIterations"&#8594;#}]</command>,
					where # is the integer number of
					maxWideningIterations.</para>
				<para>If "MaxWideningIterations" is not set, it defaults
					to Automatic, where it will be set to half the value
					of the MaxIterations option of FindMinimum.
					MaxIterations has a default value of 100, so the
					default value of maxWideningIterations is 50.</para>
			</listitem>
		</varlistentry>
	</variablelist>
</appendix>