<?xml version="1.0" encoding="UTF-8"?>
<chapter xml:id="Constrained_Optimization_Methods_PR3"
	xmlns="http://docbook.org/ns/docbook"
	xmlns:xi="http://www.w3.org/2001/XInclude"
	xmlns:xl="http://www.w3.org/1999/xlink"
	xmlns:xml="http://www.w3.org/XML/1998/namespace" version="5">
	<title>Constrained Optimization Methods â€” Project 3</title>
	<para>As Dr. Mohamed El-Sayed shows in <xref
			linkend="pr_3_screenshot_assignment"/>, the assignment is to develop
		and use a constrained optimization program to solve two arbitrary
		constrained optimization problems. We are also to provide a flow chart
		for the program, as well as its iteration history on the two problems.</para>
	<figure xml:id="pr_3_screenshot_assignment">
		<title>Project 3 Assignment</title>
		<screenshot>
			<mediaobject>
				<imageobject role="html">
					<imagedata fileref="mout/pr_3_screenshot_assignment.png"/>
				</imageobject>
				<imageobject role="fo">
					<imagedata contentwidth="5in" fileref="mout/pr_3_screenshot_assignment.png"/>
				</imageobject>
				<textobject>
					<phrase>Project (3): Use one of the SUMT methods of chapter
						5 or the feasible direction method of chapter 6 to
						develop a constrained optimization solution technique
						(program), for N variables
						use your own test cases but	provide the following:
						1) project summary, and flow chart
						2) printout and digital copy of the code
						3) the iteration history of 2 test cases of your choice</phrase>
				</textobject>
			</mediaobject>
		</screenshot>
		<caption>
			<para>This is a screenshot from part B of the seventh lecture at
				53:14.</para>
		</caption>
	</figure>
	<para><xref linkend="pr_3_Description_of_Constrained_Optimization_Solution_Technique"/>
		talks about my Augmented Lagrange Multipliers algorithm implementation,
		while <xref linkend="pr_3_ALM_Search_Problems"/> shows its application
		to my two test cases, as directed in
		<xref linkend="pr_3_screenshot_assignment"/>.</para>
	<section xml:id="pr_3_Description_of_Constrained_Optimization_Solution_Technique">
		<title>Description of Constrained Optimization Solution Technique</title>
		<section xml:id="Calling_the_ALM_Search">
			<title>Calling the Constrained ALM Search</title>
			<para>The ALM minimization method is called as follows from within
				Mathematica: <command>NMinimize[{f,constr}, {{x[1], xMinInit[1],
					xMaxInit[1]},{x[1], xMinInit[1], xMaxInit[1]}, ..., {x[n],
					xMinInit[n], xMaxInit[n]}}, Method ->
					"AugmentedLagrangeMultiplier"]</command><footnote>
					<para>As with my line search and unconstrained
						multidimensional minimization commands, this one uses a
						syntax similar to an existing command within Mathematica
						and requires a method statement. In this case, the
						command is NMinimize and my method is
						"AugmentedLagrangeMultiplier".</para>
				</footnote>
				<footnote>
					<para>NMinimize and NMaximize are the only numerical
						optimization commands in the current version of
						Mathematica (5.2) that accept constraints. However, they
						are global optimization routines instead of
						derivative/local routines. Accordingly, they only take
						an interval for the initial "values" of the independent
						variables instead of taking a point. My routine accepts
						the same syntax, but the initial interval of a variable
						is first converted to its midpoint.</para>
				</footnote>. The call variable list follows.</para>
			<variablelist>
				<varlistentry>
					<term>f</term>
					<listitem>
						<para>f is a function of the independent variables, x[1]
							to x[n] in this case.</para>
					</listitem>
				</varlistentry>
				<varlistentry>
					<term>x[i]</term><term>x[n]</term>
					<listitem>
						<para>The x[i], where i takes a value from 1 to n just
							indicate independent variables. They may be written
							in any standard way, not just as x[i]. For instance,
							it would be acceptable for x[1] to be called
							Bob. n stands for the total number of independent
							variables.</para>
					</listitem>
				</varlistentry>
				<varlistentry>
					<term>xMinInit[i]</term>
					<term>xMaxInit[i]</term>
					<listitem>
						<para>xMinInit[i] and xMaxInit[i] must be numbers such
							that <inlineequation><mathphrase>xMinInit[i] &lt; xMaxInit[i]</mathphrase></inlineequation>.
							They are averaged to obtain the
							initial starting point for x[i].</para>
					</listitem>
				</varlistentry>
				<varlistentry>
					<term>Method</term>
					<listitem>
						<para>Method is an option that can be changed with a
							rule such as Method &#8594;
							"AugmentedLagrangeMultiplier". Using that rule
							causes Mathematica to execute my ALM search.</para>
					</listitem>
				</varlistentry>
			</variablelist>
			<para>As required, the program flow charts for my ALM method and its
				internal core (or kernel) follow:</para>
			<figure xml:id="pr_3_ALM_flow_chart">
				<title>Augmented Lagrange Multiplier Method Flow Chart</title>
				<titleabbrev>ALM Flow Chart</titleabbrev>
				<mediaobject>
					<imageobject role="html">
						<imagedata
							fileref="mout/Augmented%20Lagrange%20Multiplier.png"
							/>
					</imageobject>
					<imageobject role="fo">
						<imagedata
							fileref="mout/Augmented%20Lagrange%20Multiplier.svg"
							/>
					</imageobject>
					<textobject>
						<xi:include href="Flow_Chart_Phrase.xml"/>							
					</textobject>
				</mediaobject>
				<caption>
					<para>The algorithm follows the sequential unconstrained 
						minimization technique with constraints incorporated by
						penalties augmented with Lagrange multipliers as given
						in &#167; 5-9 of
						<olink targetdoc="self" targetptr="GNVNOTED"/>. The
						Lagrange multipliers have the same physical significance
						in this algorithm that they do in
						<olink targetdoc="self" targetptr="hw_1_lagrangeconstraints"/>.
						Any inequalities, which can be eliminated through the
						use of slack variables as in
						<olink targetdoc="self" targetptr="Linear_Programming_HW3"/>,
						have instead been eliminated through the use of an
						equivalent Lagrange multiplier update formula instead.
						The variable list for this code is given in
						<olink targetdoc="self" targetptr="pr_3_multidimensional_optimization_major_variables"/>.</para>
				</caption>
			</figure>
			<figure xml:id="pr_3_ALM_Kernel_flow_chart">
				<title>Augmented Lagrange Multiplier Method Kernel Flow Chart</title>
				<titleabbrev>ALM Kernel Flow Chart</titleabbrev>
				<mediaobject>
					<imageobject role="html">
						<imagedata
							fileref="mout/ALM%20Kernel.png"
							/>
					</imageobject>
					<imageobject role="fo">
						<imagedata
							fileref="mout/ALM%20Kernel.svg"
							/>
					</imageobject>
					<textobject>
						<xi:include href="Flow_Chart_Phrase.xml"/>							
					</textobject>
				</mediaobject>
				<caption>
					<para>This is the core of the loop in
						<olink targetdoc="self" targetptr="pr_3_ALM_flow_chart"/>.
						The variable metric method mentioned in this chart is 
						covered in <xref linkend="pr_3_calling_the_unconstrained_search"/>.
						The variable list for this code is given in
						<olink targetdoc="self" targetptr="pr_3_multidimensional_optimization_major_variables"/>.</para>
				</caption>
			</figure>
			<section xml:id="pr_3_calling_the_unconstrained_search">
				<title>Calling the Unconstrained Search</title>
				<para>It wasn't shown in the body of
					<olink targetdoc="self" targetptr="Unconstrained_Nonlinear_Optimization"/>,
					but the
					calling method/command for the unconstrained search is:
					<command>FindMinimum[f, {{x[1], xInit[1]}, ..., {x[n],
					xInit[n]}}, Method -> "VariableMetric"]</command>. The
					call variable list is the same as for the Augmented
					Lagrange Multiplier method, above, except that each
					independent variable only has one starting point instead of
					a min and max starting point.
					<xref linkend="pr_3_VMM_flow_chart"/> and
					<xref linkend="pr_3_VMM_Kernel_flow_chart"/> show the
					routine logic.</para>
			<figure xml:id="pr_3_VMM_flow_chart">
				<title>Variable Metric Method Flow Chart</title>
				<titleabbrev>VMM Flow Chart</titleabbrev>
				<mediaobject>
					<imageobject role="html">
						<imagedata
							fileref="mout/Variable%20Metric%20Method.png"
							/>
					</imageobject>
					<imageobject role="fo">
						<imagedata
							fileref="mout/Variable%20Metric%20Method.svg"
							/>
					</imageobject>
					<textobject>
						<xi:include href="Flow_Chart_Phrase.xml"/>							
					</textobject>
				</mediaobject>
				<caption>
					<para>This diagram shows the program logic for the Variable
						Metric Method as discussed in
						<olink targetdoc="self" targetptr="Unconstrained_Nonlinear_Optimization"/>,
						specifically
						<olink targetdoc="self" targetptr="hw_2_bfgs_detail"/>.
						The variable list for this code is given in
						<olink targetdoc="self" targetptr="pr_3_multidimensional_optimization_major_variables"/>.</para>
				</caption>
			</figure>
			<figure xml:id="pr_3_VMM_Kernel_flow_chart">
				<title>Variable Metric Method Kernel Flow Chart</title>
				<titleabbrev>VMM Kernel Flow Chart</titleabbrev>
				<mediaobject>
					<imageobject role="html">
						<imagedata
							fileref="mout/VMM%20Kernel.png"
							/>
					</imageobject>
					<imageobject role="fo">
						<imagedata
							fileref="mout/VMM%20Kernel.svg"
							/>
					</imageobject>
					<textobject>
						<xi:include href="Flow_Chart_Phrase.xml"/>							
					</textobject>
				</mediaobject>
				<caption>
					<para>This is the core of the loop in
						<olink targetdoc="self" targetptr="pr_3_VMM_flow_chart"/>.
						The variable list for this code is given in
						<olink targetdoc="self" targetptr="pr_3_multidimensional_optimization_major_variables"/>.</para>
				</caption>
			</figure>
			</section>
		</section>
	</section>
	<section xml:id="pr_3_ALM_Search_Problems">
		<title>ALM Search Problems</title>
		<para>This section contains the problems I made up for my algorithm and
			their solutions.</para>
		<qandaset>
			<qandaentry>
				<question>
					<para>Minimize the Keane bump problem objective in three
						dimensions subject to an ellipsoidal boundary condiion
						as shown in
						<xref linkend="pr_3_keane_bump_multidimensional"/>.</para>
					<xi:include href="mout/pr_3_keane_bump_multidimensional.xml"/>
				</question>
				<answer>
					<para>This is an almost-impossible problem for a local
						solver, such as my ALM + Variable Metric Method, because
						the objective function posesses many local minima. To
						give an idea of the topology,
						<xref linkend="pr_3_keane_sample"/> is a plot of Keane's
						bump problem in two dimensions. The color scale or
						legend for this plot and all other density and contour
						plots in this chapter and the following one is given by
						<xref linkend="pr_3_plot_scale"/>.</para>
					<xi:include href="mout/pr_3_keane_sample.xml"/>
					<xi:include href="mout/pr_3_plot_scale.xml"/>
					<para>So, in one extra dimension, Keane's bump objective is
						a three dimensional scalar field with lots of minima as
						shown in <xref linkend="pr_3_keane_three_D_field"/>.</para>
					<xi:include href="mout/pr_3_keane_three_D_field.xml"/>
					<para>By design, the minimum is on the boundary, so it is
						useful to see the function values only on the boundary,
						as in
						<xref linkend="pr_3_keane_three_D_surface"></xref>.</para>
					<xi:include href="mout/pr_3_keane_three_D_surface.xml"/>
					<para>Also, because the domain is convex, it is possible to
						parametize its boundary in a spherical coordinate system
						with an origin at the centroid of the domain and display
						the result as a projection, such as
						<xref linkend="pr_3_keane_unrolled_surface"/>.</para>
					<xi:include href="mout/pr_3_keane_unrolled_surface.xml"/>
					<para>In <xref linkend="pr_3_keane_init_ranges"/> and 
						<xref linkend="pr_3_keane_method_comparison_table"/>, I
						give a comparison between my local ALM method and each
						global method provided by Mathematica.
						<olink targetdoc="self" targetptr="pr_3_keane_evaluations_table"/>
						in
						<olink targetdoc="self" targetptr="Constrained_Optimization_Methods_PR3_Appendix"/>
						provides the iteration history for my method.</para>
					<xi:include href="mout/pr_3_keane_init_ranges.xml"/>
					<xi:include href="mout/pr_3_keane_method_comparison_table.xml"/>
					<para>This optimization problem highlights one of the
						shortcomings of a local optimization technique: it is
						easily trapped by local minima. In the future, I would
						like to learn about methods that are not easily trapped.
						However, even methods that are resistant to being
						trapped in local minima have a hard time with this
						problem, as evidenced by the results of the method
						comparison.</para>
				</answer>
			</qandaentry>
			<qandaentry>
				<question>
					<para>Minimize the objective in the non-convex domain
						shown in <xref linkend="pr_3_f_multidimensional"/>.</para>
					<xi:include href="mout/pr_3_f_multidimensional.xml"/>
				</question>
				<answer>
					<para>This is a fairly easy problem for a local	solver, such
						as my ALM + Variable Metric Method, because	the
						objective function only has two minimia on the given
						domain, and they are both equal in objective
						value. In other words, as long as the method converges
						to something, it should be a global minimum. The
						objective and domain are shown in
						<xref linkend="pr_3_f_three_D_field"/>.</para>
					<xi:include href="mout/pr_3_f_three_D_field.xml"/>
					<para>By design, the minimum is on the boundary, so it is
						useful to see the function values only on the boundary,
						as in
						<xref linkend="pr_3_f_three_D_surface"></xref>.</para>
					<xi:include href="mout/pr_3_f_three_D_surface.xml"/>
					<para>Even though the domain is non-convex it is still
						possible to parametize its boundary in a spherical
						coordinate system with an origin at the centroid of the
						domain and display the result as a projection, such as
						<xref linkend="pr_3_f_unrolled_surface"/>.</para>
					<xi:include href="mout/pr_3_f_unrolled_surface.xml"/>
					<para>My ALM method is easily able to converge to one of the
						two	global minima. Again,
						<olink targetdoc="self" targetptr="pr_3_f_evaluations_table"/>
						in
						<olink targetdoc="self" targetptr="Constrained_Optimization_Methods_PR3_Appendix"/>
						provides the iteration history for my method.</para>
				</answer>
			</qandaentry>
		</qandaset>
	</section>
</chapter>